version: '3'
services:
  nginx:
    container_name: mynginx
    image: nginx:1.14.1
    restart: always
    ports:
      - "8081:80"
    links:
      - php5fpm
    volumes:
      - ./nginx:/etc/nginx
      - ./wwwroot:/usr/share/nginx/html
  es1:
    container_name: es1
    build: ./php7cli
    image: php7cli
    restart: always
    ports:
      - "9601:9501"
    volumes:
      - ./wwwroot:/home
    networks:
      mynet:
        ipv4_address: 172.18.5.60
    command:
      - sh
      - -c 
      - |
        cd /home/es3_demo
        php easyswoole start
  es2:
    container_name: es2
    build: ./php7cli
    image: php7cli
    restart: always
    ports:
      - "9602:9501"
    volumes:
      - ./wwwroot:/home
    networks:
      mynet:
        ipv4_address: 172.18.5.61
    command:
      - sh
      - -c 
      - |
        cd /home/es3_demo
        php easyswoole start
  es3:
    container_name: es3
    build: ./php7cli
    image: php7cli
    restart: always
    ports:
      - "9603:9501"
    volumes:
      - ./wwwroot:/home
    networks:
      mynet:
        ipv4_address: 172.18.5.62
    command:
      - sh
      - -c 
      - |
        cd /home/es3_demo
        php easyswoole start
  php7fpm:
    container_name: myphp7fpm
    build: ./php7fpm
    image: php7fpm
    restart: always
    ports:
      - "9001:9000"
    #links:
    #  - redis
    #  - memcached
    volumes:
      - ./wwwroot:/usr/share/nginx/html
  php5fpm:
    container_name: myphp5fpm
    build: ./php5fpm
    image: php5fpm
    restart: always
    ports:
      - "9002:9000"
    links:
      - redis
      - memcached
      - phpmyadmin
      - mongodb
    volumes:
      - ./wwwroot:/usr/share/nginx/html
  redis:
    container_name: myredis
    image: redis:5.0.0
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/conf:/etc/redis/redis.conf
    networks:
      mynet:
        ipv4_address: 172.18.5.50
    command: redis-server /etc/redis/redis.conf/myredis.conf
  redisweb:
      container_name: myredisweb
      build: ./redisweb
      environment:
        - ADMIN_USER=redis
        - ADMIN_PASS=123456
        - REDIS_1_HOST=redis
        - REDIS_1_PORT=6379
        - REDIS_1_AUTH=123456
      ports:
        - "9987:80"
      depends_on:
        - redis
  memcached:
    container_name: mymemcached
    image: bitnami/memcached:1.5.12
    restart: always
    ports:
      - "11212:11211"
    environment:
      - MEMCACHED_CACHE_SIZE=128
  mongodb:
    container_name: mymongodb
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - ./mongodb/data:/bitnami
  mongoweb:
    container_name: mymongoweb
    image: mongo-express:0.49.0
    restart: always
    ports:
      - 8811:8081
    links:
      - mongodb
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: 3024-night
  mysql:
    image: mysql:5.6
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
    volumes:
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/data:/val/lib/mysql
      - ./mysql/logs:/logs
  proxysql:
    image: proxysql/proxysql:2.0.8
    container_name: myproxysql
    restart: always
    ports:
      - "6033:6032"
    #environment:
      #MONITOR_CONFIG_CHANGE: "true"
      #MYSQL_ROOT_PASSWORD: "123456"
      #MYSQL_PROXY_USER: "proxyuser"
      #MYSQL_PROXY_PASSWORD: "123456"
    volumes:
      - ./proxysql/etc/proxysql.cnf:/etc/proxysql.cnf
  mastersql:
    image: mysql:5.6
    container_name: mastermysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "my_app"
    volumes:
      - ./mysql/master/conf:/etc/mysql/conf.d
      - ./mysql/master/data:/val/lib/mysql
      - ./mysql/master/logs:/logs
    networks:
      mynet:
        ipv4_address: 172.18.5.2
  slaversql:
    image: mysql:5.6
    container_name: slavermysql
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_DATABASE: "my_app"
    volumes:
      - ./mysql/slaver/conf:/etc/mysql/conf.d
      - ./mysql/slaver/data:/val/lib/mysql
      - ./mysql/slaver/logs:/logs
    networks:
      mynet:
        ipv4_address: 172.18.5.3
  phpmyadmin:
    container_name: myphpadmin
    image: phpmyadmin/phpmyadmin:4.8.3
    restart: always
    ports:
      - "8899:80"
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: 127.0.0.1
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 123456
  consul:
    container_name: myconsul
    image: consul:1.6.2
    restart: always
    ports:
      - 8300:8300
      - 8301:8301
      - 8301:8301/udp
      - 8302:8302
      - 8302:8302/udp
      - 8400:8400
      - 8500:8500
      - 53:53/udp
    volumes:
      - ./consul/data:/consul/data
      - ./consul/conf:/consul/config
    networks:
      mynet:
        ipv4_address: 172.18.5.10
    command: agent -server -bind=0.0.0.0 -client=0.0.0.0 -node=consul_server1 -bootstrap-expect=1 -ui
  nodejs:
    container_name: mynodejs
    build: ./nodejs
    image: nodejs
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - ./wwwroot:/app
    command: sleep 86400
  dockerweb:
    container_name: mydockerweb
    build: ./dockerweb
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9005:9000"
networks:
  mynet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.5.0/20